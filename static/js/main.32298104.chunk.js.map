{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"4NAOaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,yBAASS,UAAU,qBAAnB,SACE,qBAAKA,UAAU,8BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,4BACGT,EAAU,mCACsBA,EADtB,KAEN,wCA5BrB,GAAyBU,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.32298104.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.min.css';\n\ntype State = {\n  pressedKey: string\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent): void => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body has-text-centered\">\n          <div className=\"container\">\n            <div className=\" box notification is-link\">\n              <p>\n                {pressedKey\n                  ? (`The last pressed key is [${pressedKey}]`)\n                  : ('Nothing was pressed yet')}\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}